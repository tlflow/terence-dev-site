---
import Navigation from "../components/Navigation.astro";
import "../styles/main.css";
export interface Props {
  title: string;
}

const { title } = Astro.props;
import "../styles/animation.css";
---

<!DOCTYPE html>
<html lang="en">
  <head>
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link
      href="https://fonts.googleapis.com/css2?family=Saira:wght@200..900&family=Inter:wght@200..900&display=swap"
      rel="stylesheet"
    />

    <!-- <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link
      href="https://fonts.googleapis.com/css2?family=Inter:wght@200..900&family=Saira:wght200...900&display=swap"
      rel="stylesheet"
    /> -->

    <meta charset="UTF-8" />
    <meta name="description" content="Astro description" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <title>{title}</title>
  </head>
  <body id="page-body">
    <!-- <Navigation /> -->
    <slot />
  </body>
</html>

<script>
  import buildThresholds from "../js/utils/thresholds";

  const animationItems = document.getElementsByClassName("animate");
  const animationItemsArray = Array.from(animationItems);

  function createObservers() {
    const options = {
      root: null,
      rootMargin: "0px",
      threshold: buildThresholds(5),
    };

    const observer = new IntersectionObserver((entries) => {
      entries.forEach((entry) => {
        console.log("test", entry.intersectionRatio);
        if (entry.intersectionRatio > 0.4) {
          entry.target.classList.add("fade");
          console.log(entry.target, entry);
          // observer.unobserve(entry.target);
        }
      });
    }, options);

    for (const item of animationItemsArray) {
      observer.observe(item);
    }
  }

  createObservers();
</script>
