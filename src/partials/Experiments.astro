---
import SVGBeaker from './svgs/experiment.astro'
import { getCollection } from 'astro:content'

const publishedPosts = await getCollection('experiments', ({ data }) => {
	return data.published && data.pubDate < new Date()
})

const mostRecent = publishedPosts.slice(0, 3)
---

<div class="outer-layout-grid">
	<header>
		<h2
			id="experiments"
			class="section-heading"
			tabindex="0">
			My Experiments
		</h2>
		<p class="section-description">Some fun stuff I've been tinkering with lately</p>
	</header>
	<div class="section-content">
		<div class="cards">
			{
				mostRecent.map((post) => (
					<div class="card">
						<div class="icon icon-lg">
							<SVGBeaker />
						</div>
						<h3 class="h4">
							<a
								class="card-link"
								href={`/blog/${post.slug}`}>
								{post.data.title}
							</a>
						</h3>
						<p class="description">{post.data.description}</p>
					</div>
				))
			}
		</div>
	</div>

	<div class="btn-wrapper">
		<a
			href="/experiments/"
			class="btn">
			see more
		</a>
	</div>
</div>

<style>
	.outer-layout-grid {
		container-type: inline-size;
		display: grid;
		row-gap: 2rem;
		grid-template-columns: repeat(4, 1fr);

		@container article (width >= 768px) {
			grid-template-columns: repeat(12, 1fr);
		}
	}

	header {
		grid-column: 1 / span 4;

		@container article (width >= 768px) {
			grid-column: 3 / span 8;
		}
	}

	.section-content {
		grid-column: 1 / span 4;
		@container article (width >= 768px) {
			grid-column: 1 / span 12;
		}
		@container article (width >= 1024px) {
			grid-column: 2 / span 10;
		}
	}

	.btn-wrapper {
		grid-column: 1 / span 4;
		text-align: center;

		@container article (width >= 768px) {
			grid-column: 1 / span 12;
			text-align: center;
		}
	}

	.cards {
		grid-column: 1 / span 4;
		display: grid;
		grid-template-columns: repeat(1, fr);
		row-gap: 1rem;

		@container article (width >= 768px) {
			grid-template-columns: repeat(auto-fit, minmax(24ch, 1fr));
			gap: 1rem;
		}
		@container article (width >= 1024px) {
			grid-template-columns: repeat(auto-fit, minmax(16ch, 1fr));
		}
	}

	.card {
		border-radius: var(--btn-border-radius);
		background-color: var(--color-primary-darker);
		padding: var(--panel-padding);
		transform: translateY(0);
		transition: all 0.2s ease-in;
		box-shadow: none;

		&:hover {
			transition: all 0.2s ease-in;
			transform: translateY(-6px);
			box-shadow: rgba(0, 0, 0, 0.25) 0px 5px 0px;
		}
	}

	.card h3 {
		font-size: var(--fs-300);
		margin-top: 0;
		margin-bottom: 1rem;
	}
	.card p {
		font-size: var(--fs-300);
		line-height: 1.4;
		margin-bottom: 0.5rem;
	}

	.card .icon {
		color: var(--color-secondary);
		margin-bottom: 2rem;
	}

	.card-link {
		color: var(--color-secondary);
		font-weight: 300;
	}
</style>
