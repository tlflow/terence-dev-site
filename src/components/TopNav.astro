---
import SVGBrandLogo from '../partials/svgs/brandlogo.astro'
import NavItems from './NavItems.astro'
---

<div
	id="top_nav"
	data-status="">
	<div class="nav-content">
		<div class="container">
			<div class="top-nav-wrapper">
				<div class="nav-brand">
					<a
						class="brand-link"
						href="/">
						<div class="icon home-nav-icon icon-link">
							<SVGBrandLogo />
						</div>
						<span>Terence Flowers</span>
					</a>
				</div>
				<NavItems class="top" />
			</div>
		</div>
	</div>
	<div class="nav-overlay"></div>
</div>

<style>
	.nav-wrapper {
		display: flex;
	}

	.nav-content {
		position: absolute;
		z-index: 1;
		background-color: hsl(233, 27.5%, 17.8%, 90%);
		height: 100%;
		width: 100%;
		top: 0;
		padding: 16px 0;
		box-shadow: none;
	}

	.nav-overlay {
		position: relative;
		z-index: 0;
		/* filter: blur(4px) brightness(50%); */
		position: absolute;
		backdrop-filter: blur(4px);
		-webkit-backdrop-filter: blur(4px);
		filter: blur(4px);
		width: 100%;
		height: 100%;
		top: 0;
	}

	.nav-brand .brand-link {
		display: flex;
		gap: 0.8rem;
		align-items: center;
		color: var(--color-secondary);
		font-family: var(--font-display);
	}

	#top_nav {
		position: relative;
		top: 0;
		width: 100%;

		z-index: 99;
		transform: translateY(0px);
		transition: all 0.3s ease-in;
		min-height: 4rem;

		&[data-status='unlocked'] {
			transform: translateY(-100px);
		}

		&[data-status='active'] {
			position: fixed;
			transform: translateY(0px);
			transition: all 0.35s ease-in-out;

			.nav-content {
				box-shadow:
					rgba(0, 0, 0, 0.499) 0px 2px 6px,
					inset rgba(67, 67, 67, 0.14) 0px -2px 0;
			}

			/* inset rgba(26, 31, 49, 0.746) 0px -4px 0; */
		}
	}

	body.homepage #top_nav {
		position: fixed;
		top: 0;
		transform: translateY(-100px);

		&[data-status='active'] {
			transform: translateY(0px);
			transition: all 0.35s ease-in-out;
			box-shadow:
				rgba(0, 0, 0, 0.499) 0px 2px 6px,
				inset rgba(67, 67, 67, 0.14) 0px -2px 0;
			/* inset rgba(26, 31, 49, 0.746) 0px -4px 0; */
		}
	}

	.home-nav-icon {
		display: inline-block;
	}
	.top-nav-wrapper {
		display: flex;
		justify-content: space-between;
		align-items: center;
	}
</style>

<script>
	import buildThresholds from '../js/utils/thresholds'

	const $_TOPNAV = document.getElementById('top_nav')

	function showTopNav() {
		$_TOPNAV.dataset.status = 'active'
	}
	function hideTopNav() {
		$_TOPNAV.dataset.status = ''
	}
	function unlockTopNav() {
		$_TOPNAV.dataset.status = 'unlocked'
	}

	function isTopNavHidden() {
		return $_TOPNAV.dataset.status !== 'active'
	}

	function createObserver() {
		const headerWrapper = document.getElementsByClassName('header-wrapper')[0]

		let scrollPositions
		scrollPositions = []

		const options = {
			root: null,
			rootMargin: '0px',
			threshold: buildThresholds(10),
		}

		const observer = new IntersectionObserver((entries) => {
			entries.forEach((entry) => {
				const headerPosY = entry.boundingClientRect.top

				scrollPositions.push(headerPosY)

				const lastTwoPositions = scrollPositions.slice(-2)
				const preVal = lastTwoPositions[0]
				const newVal = lastTwoPositions[1]

				if (preVal < newVal) {
					//scrolling up
					if (entry.isIntersecting) {
						hideTopNav()
						scrollPositions = []
						return
					}
				} else {
					// scrolling down
					if (entry.intersectionRatio < 0.75 && entry.intersectionRatio > 0.25 && isTopNavHidden()) {
						unlockTopNav()
						// scrollPositions = [];
						return
					}
					if (entry.intersectionRatio < 0.25 && isTopNavHidden()) {
						showTopNav()
						scrollPositions = []
						return
					}
				}
			})
		}, options)
		observer.observe(headerWrapper)
	}

	createObserver()
</script>
